{"version":3,"sources":["webpack:///./public/app/core/components/Signup/VerifyEmail.tsx","webpack:///./public/app/core/components/Signup/VerifyEmailPage.tsx"],"names":["VerifyEmail","emailSent","setEmailSent","useState","margin","variant","href","getConfig","appSubUrl","onSubmit","formModel","getBackendSrv","post","then","catch","err","msg","data","message","appEvents","emit","AppEvents","alertWarning","register","errors","label","description","invalid","email","error","required","placeholder","fill","VerifyEmailPage","verifyEmailEnabled","LoginLayout","window","location"],"mappings":"gaAWO,MAAMA,EAAkB,KAC7B,MAAOC,EAAWC,GAAgBC,oBAAS,GAc3C,OAAIF,EAEA,sCACE,sIADF,MAEE,cAAC,YAAD,CAAWG,OAAO,QAClB,cAAC,aAAD,CAAYC,QAAQ,UAAUC,KAAMC,cAAYC,UAAY,UAA5D,gCAQJ,cAAC,OAAD,CAAMC,SAzBUC,IAChBC,0BACGC,KAAK,mBAAoBF,GACzBG,KAAK,KACJX,GAAa,KAEdY,MAAOC,IAAQ,MACd,MAAMC,GAAM,UAAAD,EAAIE,YAAJ,eAAUC,UAAWH,EACjCI,IAAUC,KAAKC,YAAUC,aAAc,CAACN,OAiB5C,SACG,EAAGO,WAAUC,aAAb,aACC,2CACE,cAAC,SAAD,4BACA,cAAC,QAAD,CACEC,MAAM,QACNC,YAAY,kEACZC,UAAYH,EAAeI,MAC3BC,MAAK,UAAGL,EAAeI,aAAlB,aAAE,EAAuBV,QAJhC,SAME,cAAC,QAAD,KAAWK,EAAS,QAAS,CAAEO,UAAU,IAAzC,CAAkDC,YAAY,aAEhE,eAAC,kBAAD,iBACE,cAAC,SAAD,uCACA,cAAC,aAAD,CAAYC,KAAK,OAAO1B,KAAMC,cAAYC,UAAY,SAAtD,qC,sDC/CL,MAAMyB,EAAsB,IAC5B1B,cAAY2B,mBAKjB,MACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,UACE,cAACnC,EAAD,UAPJoC,OAAOC,SAAS/B,KAAOC,cAAYC,UAAY,UACxC,8BAYIyB","file":"91.287cd4997284268b2f13.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { Form, Field, Input, Button, Legend, Container, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { getBackendSrv } from '@grafana/runtime';\nimport appEvents from 'app/core/app_events';\nimport { AppEvents } from '@grafana/data';\n\ninterface EmailDTO {\n  email: string;\n}\n\nexport const VerifyEmail: FC = () => {\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = (formModel: EmailDTO) => {\n    getBackendSrv()\n      .post('/api/user/signup', formModel)\n      .then(() => {\n        setEmailSent(true);\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        appEvents.emit(AppEvents.alertWarning, [msg]);\n      });\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a verification link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={getConfig().appSubUrl + '/signup'}>\n          Complete Signup\n        </LinkButton>\n      </div>\n    );\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Verify Email</Legend>\n          <Field\n            label=\"Email\"\n            description=\"Enter your email address to get a verification link sent to you\"\n            invalid={!!(errors as any).email}\n            error={(errors as any).email?.message}\n          >\n            <Input {...register('email', { required: true })} placeholder=\"Email\" />\n          </Field>\n          <HorizontalGroup>\n            <Button>Send verification email</Button>\n            <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n        </>\n      )}\n    </Form>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\nimport { VerifyEmail } from './VerifyEmail';\nimport { getConfig } from 'app/core/config';\n\nexport const VerifyEmailPage: FC = () => {\n  if (!getConfig().verifyEmailEnabled) {\n    window.location.href = getConfig().appSubUrl + '/signup';\n    return <></>;\n  }\n\n  return (\n    <LoginLayout>\n      <InnerBox>\n        <VerifyEmail />\n      </InnerBox>\n    </LoginLayout>\n  );\n};\n\nexport default VerifyEmailPage;\n"],"sourceRoot":""}